@model EditDiabetesRiskVM

@{
    ViewData["Title"] = "Edit";
}

<div class="container mx-auto px-4 py-8">
    <div class="bg-white shadow-md rounded-lg p-8 mb-8">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="block mb-2 text-sm text-red-700"></div>
            <input type="hidden" asp-for="DiabetesRisk.HouseholdMemberId" value="@Model.DiabetesRisk.HouseholdMemberId" />
            <input type="hidden" id="hiddenAgeField" asp-for="DiabetesRisk.AgeRiskPoints" />
            <div>
                <div class="flex justify-between">
                    <h1 class="text-xl">Create</h1>
                    <button data-modal-target="diabetesRiskInfoModal" data-modal-toggle="diabetesRiskInfoModal" type="button" class="border-blue-100 hover:bg-blue-100 hover:text-white focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-full text-sm p-1 text-center items-center">
                        <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11h2v5m-2 0h4m-2.592-8.5h.01M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                        </svg>
                    </button>
                </div>
                @await Html.PartialAsync("../Shared/Popups/_DiabetesRiskInfo")
                <div class="flex justify-between">
                    <h1 class="text-2xl font-bold text-gray-800 mb-4">Type 2 Diabetes Risk Assessment Form</h1>
                    <h1 class="text-xl font-bold text-gray-800 mb-4">
                        Risk Score:

                        @Html.Raw(Model.DiabetesRisk.TotalScore switch
                            {
                                < 7 => $"<span id='riskScore' class='text-green-400'> {Model.DiabetesRisk.TotalScore} Low</span>",
                                >= 7 and <= 11 => $"<span id='riskScore' class='text-yellow-400'>{Model.DiabetesRisk.TotalScore} - Slightly Elevated</span>",
                                >= 12 and <= 14 => $"<span id='riskScore' class='text-orange-500'>{Model.DiabetesRisk.TotalScore} - Moderate</span>",
                                >= 15 and <= 20 => $"<span id='riskScore' class='text-pink-500'>{Model.DiabetesRisk.TotalScore} - High</span>",
                                _ => $"<span id='riskScore' class='text-red-500'>{Model.DiabetesRisk.TotalScore} - Very High</span>"
                            })
                    </h1>
                </div>
            </div>
            <hr class="mb-4">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-12">
                <!-- Left Column -->
                <div>
                    <div class="mb-2 mt-8">
                        <h6 class="text-md font-bold text-gray-800">Choose the right alternative and add up your points.</h6>
                    </div>
                    <!-- Assessment for -->
                    <div class="mb-4">
                        <label asp-for="DiabetesRisk.HouseholdMemberId" class="block mb-2 text-sm font-medium text-gray-700">Assessment for</label>
                        <select id="assessmentFor" asp-for="DiabetesRisk.HouseholdMemberId" class="risk-factor bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full md:w-4/5 p-2.5">
                            @foreach (var member in Model.MemberList)
                            {
                                <option value="@member.Id" data-age="@member.AgeYears" data-sex="@member.Sex">@member.FormattedFullName</option>
                            }
                        </select>
                        <span asp-validation-for="DiabetesRisk.HouseholdMemberId" class="block mb-2 text-sm text-red-700"></span>
                    </div>
                    <!-- Age -->
                    <div class="mb-4">
                        <label asp-for="DiabetesRisk.AgeRiskPoints" class="block mb-2 text-sm font-medium text-gray-700">Age</label>
                        <select id="ageDropdown" class="risk-factor bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 w-full md:w-4/5">
                            <option value="0">Under 45 years old - 0 pts</option>
                            <option value="2">45-54 years old - 2 pts</option>
                            <option value="3">55-64 years old - 3 pts</option>
                            <option value="4">Over 64 years old - 4 pts</option>
                        </select>
                        <span asp-validation-for="DiabetesRisk.AgeRiskPoints" class="block mb-2 text-sm text-red-700"></span>
                    </div>
                    <!-- BMI -->
                    <div class="mb-2 mt-8 w-full md:w-4/5 flex justify-between">
                        <h6 class="text-md font-bold text-gray-800">Body-mass index</h6>
                        <button id="toggleBmiFieldsButton" type="button" class="text-sm font-medium text-blue-600">Calculate BMI</button>
                    </div>
                    <!-- BMI Calculation Fields (hidden by default) -->
                    <div id="bmiCalculationFields" style="display: none;">
                        <div class="mb-4">
                            <label asp-for="HeightInCm" class="block mb-2 text-sm font-medium text-gray-700">Height in cm</label>
                            <input id="heightInput" asp-for="HeightInCm" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full md:w-4/5 p-2.5" />
                            <span asp-validation-for="HeightInCm" class="block mb-2 text-sm text-red-700"></span>
                        </div>
                        <div class="mb-4">
                            <label asp-for="WeightInKg" class="block mb-2 text-sm font-medium text-gray-700">Weight in kg</label>
                            <input id="weightInput" asp-for="WeightInKg" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full md:w-4/5 p-2.5" />
                            <span asp-validation-for="WeightInKg" class="block mb-2 text-sm text-red-700"></span>
                        </div>
                        <div class="mb-4">
                            <label asp-for="Bmi" class="block mb-2 text-sm font-medium text-gray-700">BMI</label>
                            <input id="bmiResult" disabled asp-for="Bmi" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full md:w-4/5 p-2.5" />
                            <span asp-validation-for="Bmi" class="block mb-2 text-sm text-red-700"></span>
                        </div>
                    </div>
                    <!-- BMI Dropdown -->
                    <div class="mb-4">
                        <label asp-for="DiabetesRisk.BmiRiskPoints" class="block mb-2 text-sm font-medium text-gray-700">BMI Classification</label>
                        <select id="bmiClassification" asp-for="DiabetesRisk.BmiRiskPoints" class="risk-factor bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 w-full md:w-4/5">
                            <option value="0">Lower than 25 kg/m² - 0 pts</option>
                            <option value="1">25-30 kg/m² - 1 pt</option>
                            <option value="3">Higher than 30 kg/m² - 3 pts</option>
                        </select>
                        <span asp-validation-for="DiabetesRisk.BmiRiskPoints" class="block mb-2 text-sm text-red-700"></span>
                    </div>

                    <!-- Waist Circumference -->
                    <div class="mb-2 mt-8">
                        <h6 class="text-md font-bold text-gray-800">Waist Circumference</h6>
                    </div>
                    <div class="mb-4">
                        <label asp-for="DiabetesRisk.WaistCircumferenceMenRiskPoints" class="block mb-2 text-sm font-medium text-gray-700">Waist Circumference measured below the ribs</label>
                        <!-- MEN -->
                        <select id="waistCircumferenceMen" style="display: @(Model.DiabetesRisk.HouseholdMember.Sex == 'M' ? "block" : "none");" asp-for="DiabetesRisk.WaistCircumferenceMenRiskPoints" class="risk-factor bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 w-full md:w-4/5">
                            <option value="0" selected>Select your waist circumference (Male)</option>
                            <option value="0">Less than 94 cm - 0 pts</option>
                            <option value="3">94-102 cm - 3 pts</option>
                            <option value="4">More than 102 cm - 4 pts</option>
                        </select>
                        <span id="waistCircumferenceMenValidation" asp-validation-for="DiabetesRisk.WaistCircumferenceMenRiskPoints" class="block mb-2 text-sm text-red-700"></span>
                        <!-- WOMEN -->
                        <select id="waistCircumferenceWomen" style="display: @(Model.DiabetesRisk.HouseholdMember.Sex == 'F' ? "block" : "none");;" asp-for="DiabetesRisk.WaistCircumferenceWomenRiskPoints" class="risk-factor bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 w-full md:w-4/5">
                            <option value="0" selected>Select your waist circumference (Female)</option>
                            <option value="0">Less than 80 cm - 0 pts</option>
                            <option value="3">80-88 cm - 3 pts</option>
                            <option value="4">More than 88 cm - 4 pts</option>
                        </select>
                        <span id="waistCircumferenceWomenValidation" asp-validation-for="DiabetesRisk.WaistCircumferenceWomenRiskPoints" class="block mb-2 text-sm text-red-700"></span>
                    </div>
                </div>
                <!-- Right Column -->
                <div>
                    <!-- Physical Activity -->
                    <div class="mb-2 mt-8">
                        <h6 class="text-md font-bold text-gray-800">Physical Activity</h6>
                    </div>
                    <div class="mb-4">
                        <label class="block mb-2 text-sm font-medium text-gray-700">Do you usually have daily at least 30 minutes of physical activity at work and/or during leisure time?</label>
                        <div class="">
                            <div class="flex items-center me-4">
                                <input asp-for="DiabetesRisk.IsPhysicallyActive" value="true" type="radio" class="w-4 h-4 text-blue-600 bg-gray-50 border-gray-300 focus:ring-blue-500">
                                <label asp-for="DiabetesRisk.IsPhysicallyActive" class="ms-2 text-sm font-medium text-gray-900">Yes - 0 pts</label>
                            </div>
                            <div class="flex items-center me-4">
                                <input asp-for="DiabetesRisk.IsPhysicallyActive" value="false" type="radio" class="w-4 h-4 text-blue-600 bg-gray-50 border-gray-300 focus:ring-blue-500">
                                <label asp-for="DiabetesRisk.IsPhysicallyActive" class="ms-2 text-sm font-medium text-gray-900">No - 2 pts</label>
                            </div>
                        </div>
                        <span asp-validation-for="DiabetesRisk.IsPhysicallyActive" class="block mb-2 text-sm text-red-700"></span>
                    </div>

                    <!-- Healthy Food Intake -->
                    <div class="mb-2 mt-8">
                        <h6 class="text-md font-bold text-gray-800">Healthy Food Intake</h6>
                    </div>
                    <div class="mb-4">
                        <label class="block mb-2 text-sm font-medium text-gray-700">How often do you eat vegetables, fruits, or berries?</label>
                        <div class="">
                            <div class="flex items-center me-4">
                                <input asp-for="DiabetesRisk.EatsVegetablesEveryDay" value="true" type="radio" class="w-4 h-4 text-blue-600 bg-gray-50 border-gray-300 focus:ring-blue-500">
                                <label asp-for="DiabetesRisk.EatsVegetablesEveryDay" class="ms-2 text-sm font-medium text-gray-900">Every day - 0 pts</label>
                            </div>
                            <div class="flex items-center me-4">
                                <input asp-for="DiabetesRisk.EatsVegetablesEveryDay" value="false" type="radio" class="w-4 h-4 text-blue-600 bg-gray-50 border-gray-300 focus:ring-blue-500">
                                <label asp-for="DiabetesRisk.EatsVegetablesEveryDay" class="ms-2 text-sm font-medium text-gray-900">Not every day - 1 pt</label>
                            </div>
                        </div>
                        <span asp-validation-for="DiabetesRisk.EatsVegetablesEveryDay" class="block mb-2 text-sm text-red-700"></span>
                    </div>

                    <!-- High Blood Pressure -->
                    <div class="mb-2 mt-8">
                        <h6 class="text-md font-bold text-gray-800">High Blood Pressure</h6>
                    </div>
                    <div class="mb-4">
                        <label class="block mb-2 text-sm font-medium text-gray-700">Have you ever taken medication for high blood pressure on a regular basis?</label>
                        <div class="">
                            <div class="flex items-center me-4">
                                <input asp-for="DiabetesRisk.TakingHighBloodPressureMedication" value="false" type="radio" class="w-4 h-4 text-blue-600 bg-gray-50 border-gray-300 focus:ring-blue-500">
                                <label asp-for="DiabetesRisk.TakingHighBloodPressureMedication" class="ms-2 text-sm font-medium text-gray-900">No - 0 pts</label>
                            </div>
                            <div class="flex items-center me-4">
                                <input asp-for="DiabetesRisk.TakingHighBloodPressureMedication" value="true" type="radio" class="w-4 h-4 text-blue-600 bg-gray-50 border-gray-300 focus:ring-blue-500">
                                <label asp-for="DiabetesRisk.TakingHighBloodPressureMedication" class="ms-2 text-sm font-medium text-gray-900">Yes - 2 pts</label>
                            </div>
                        </div>
                        <span asp-validation-for="DiabetesRisk.TakingHighBloodPressureMedication" class="block mb-2 text-sm text-red-700"></span>
                    </div>

                    <!-- High Blood Glucose -->
                    <div class="mb-2 mt-8">
                        <h6 class="text-md font-bold text-gray-800">High Blood Glucose</h6>
                    </div>
                    <div class="mb-4">
                        <label class="block mb-2 text-sm font-medium text-gray-700">Have you ever been found to have high blood glucode (eg. in a health examination, during an illness, during pregnancy?</label>
                        <div class="">
                            <div class="flex items-center me-4">
                                <input asp-for="DiabetesRisk.HasHighBloodGlucose" value="false" type="radio" class="w-4 h-4 text-blue-600 bg-gray-50 border-gray-300 focus:ring-blue-500">
                                <label asp-for="DiabetesRisk.HasHighBloodGlucose" class="ms-2 text-sm font-medium text-gray-900">No - 0 pts</label>
                            </div>
                            <div class="flex items-center me-4">
                                <input asp-for="DiabetesRisk.HasHighBloodGlucose" value="true" type="radio" class="w-4 h-4 text-blue-600 bg-gray-50 border-gray-300 focus:ring-blue-500">
                                <label asp-for="DiabetesRisk.HasHighBloodGlucose" class="ms-2 text-sm font-medium text-gray-900">Yes - 5 pts</label>
                            </div>
                        </div>
                        <span asp-validation-for="DiabetesRisk.HasHighBloodGlucose" class="block mb-2 text-sm text-red-700"></span>
                    </div>

                    <!-- Family Diabetes History -->
                    <div class="mb-2 mt-8">
                        <h6 class="text-md font-bold text-gray-800">Family Diabetes History</h6>
                    </div>
                    <div class="mb-4">
                        <label asp-for="DiabetesRisk.FamilyWithDiabetesRiskPoints" class="block mb-2 text-sm font-medium text-gray-700">Have any of the members of your immediate family or other relative been diagnosed with diabetes (type 1 or type 2)?</label>
                        <select id="familyWithDiabetesRisk" asp-for="DiabetesRisk.FamilyWithDiabetesRiskPoints" class="risk-factor bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 p-2.5 w-full md:w-4/5">
                            <option value="0">No - 0 pts</option>
                            <option value="3">Yes; grandparent, aunt, unlce or first cousin - 3 pts</option>
                            <option value="5">Yes; parent, brother, sister or own child - 5 pts</option>
                        </select>
                        <span asp-validation-for="DiabetesRisk.FamilyWithDiabetesRiskPoints" class="block mb-2 text-sm text-red-700"></span>
                    </div>
                </div>
            </div>
            <div class="flex justify-end">
                <a asp-action="Index" asp-controller="DiabetesRisk" asp-route-householdNo="@Model.HouseholdNo" class="focus:outline-none text-white bg-red-400 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 hover:bg-red-450 !important">Back</a>
                <button type="submit" class="focus:outline-none text-white bg-primary-50 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2">Add</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Select relevant inputs
            const ageDropdown = document.getElementById("ageDropdown");
            const bmiDropdown = document.getElementById("bmiClassification");
            const waistMenDropdown = document.getElementById("waistCircumferenceMen");
            const waistWomenDropdown = document.getElementById("waistCircumferenceWomen");
            const physicalActivityInputs = document.querySelectorAll("input[name='DiabetesRisk.IsPhysicallyActive']");
            const vegetableIntakeInputs = document.querySelectorAll("input[name='DiabetesRisk.EatsVegetablesEveryDay']");
            const highBloodPressureInputs = document.querySelectorAll("input[name='DiabetesRisk.TakingHighBloodPressureMedication']");
            const highBloodGlucoseInputs = document.querySelectorAll("input[name='DiabetesRisk.HasHighBloodGlucose']");
            const familyHistoryDropdown = document.getElementById("familyWithDiabetesRisk");
            const riskScoreDisplay = document.getElementById("riskScore");

            // Add event listeners
            [ageDropdown, bmiDropdown, waistMenDropdown, waistWomenDropdown, familyHistoryDropdown].forEach(dropdown => {
                if (dropdown) {
                    dropdown.addEventListener("change", calculateRiskScore);
                }
            });

            [physicalActivityInputs, vegetableIntakeInputs, highBloodPressureInputs, highBloodGlucoseInputs].forEach(inputs => {
                inputs.forEach(input => {
                    input.addEventListener("change", calculateRiskScore);
                });
            });

            // Calculate risk score
            function calculateRiskScore() {
                let riskScore = 0;

                // Get values and parse to integers (default to 0 if empty/invalid)
                const ageRisk = parseInt(ageDropdown?.value || 0);
                const bmiRisk = parseInt(bmiDropdown?.value || 0);
                const familyRisk = parseInt(familyHistoryDropdown?.value || 0);

                // Determine gender-based waist circumference risk points
                const waistRisk = (waistMenDropdown?.style.display !== "none")
                    ? parseInt(waistMenDropdown?.value || 0)
                    : parseInt(waistWomenDropdown?.value || 0);

                // Get points for radio options
                const physicalActivityRisk = Array.from(physicalActivityInputs).find(input => input.checked)?.value === "false" ? 2 : 0;
                const vegetableIntakeRisk = Array.from(vegetableIntakeInputs).find(input => input.checked)?.value === "false" ? 1 : 0;
                const highBloodPressureRisk = Array.from(highBloodPressureInputs).find(input => input.checked)?.value === "false" ? 0 : 2;
                const highBloodGlucoseRisk = Array.from(highBloodGlucoseInputs).find(input => input.checked)?.value === "false" ? 0 : 5;

                // Sum up the risk score
                riskScore = ageRisk + bmiRisk + familyRisk + waistRisk + physicalActivityRisk + vegetableIntakeRisk + highBloodPressureRisk + highBloodGlucoseRisk;

                // Remove all previous color classes
                riskScoreDisplay.classList.remove("text-green-400", "text-yellow-400", "text-orange-500", "text-pink-500", "text-red-500");

                // Add the appropriate color class based on the risk score
                if (riskScore < 7) {
                    riskScoreDisplay.classList.add("text-green-400");
                    riskScoreDisplay.textContent = `${riskScore} - Low`;
                } else if (riskScore >= 7 && riskScore <= 11) {
                    riskScoreDisplay.classList.add("text-yellow-400");
                    riskScoreDisplay.textContent = `${riskScore} - Slightly Elevated`;
                } else if (riskScore >= 12 && riskScore <= 14) {
                    riskScoreDisplay.classList.add("text-orange-500");
                    riskScoreDisplay.textContent = `${riskScore} - Moderate`;
                } else if (riskScore >= 15 && riskScore <= 20) {
                    riskScoreDisplay.classList.add("text-pink-500");
                    riskScoreDisplay.textContent = `${riskScore} - High`;
                } else {
                    riskScoreDisplay.classList.add("text-red-500");
                    riskScoreDisplay.textContent = `${riskScore} - Very High`;
                }
            }

        });

        document.getElementById("assessmentFor").addEventListener("change", function () {
            const selectedOption = this.options[this.selectedIndex];
            const age = parseInt(selectedOption.getAttribute("data-age"));
            const ageDropdown = document.getElementById("ageDropdown");
            const sex = selectedOption.getAttribute('data-sex');
            const waistCircumferenceForMen = document.getElementById("waistCircumferenceMen");
            const waistCircumferenceForWomen = document.getElementById("waistCircumferenceWomen");
            const waistCircumferenceForMenValidation = document.getElementById("waistCircumferenceMenValidation");
            const waistCircumferenceForWomenValidation = document.getElementById("waistCircumferenceWomenValidation");
            const hiddenAgeField = document.getElementById("hiddenAgeField");

            ageDropdown.disabled = false;

            if (!isNaN(age)) {
                if (age < 45) {
                    ageDropdown.value = "0"; // Under 45 years old - 0 pts
                } else if (age >= 45 && age <= 54) {
                    ageDropdown.value = "2"; // 45-54 years old - 2 pts
                } else if (age >= 55 && age <= 64) {
                    ageDropdown.value = "3"; // 55-64 years old - 3 pts
                } else {
                    ageDropdown.value = "4"; // Over 64 years old - 4 pts
                }

                // Disable the dropdown
                ageDropdown.disabled = true;
                hiddenAgeField.value = ageDropdown.value;
            } else {
                // If no member is selected, reset the dropdown
                ageDropdown.disabled = false; // Allow selection if no member is selected
                hiddenAgeField.value = this.value;
            }

            // Handle sex waist circumference fields visibility
            if (sex === 'M') {
                waistCircumferenceForMen.style.display = "block";
                waistCircumferenceForWomen.style.display = "none";
                waistCircumferenceForWomenValidation.style.display = "none";
            }
            else {
                waistCircumferenceForMen.style.display = "none";
                waistCircumferenceForMenValidation.style.display = "none";
                waistCircumferenceForWomen.style.display = "block";
            }

            // Dispatch a change event
            const event = new Event("change");
            ageDropdown.dispatchEvent(event);

            waistCircumferenceForMen.value = "0";
            waistCircumferenceForWomen.value = "0";
        });

        // Toggle calculate BMI button
        document.getElementById("toggleBmiFieldsButton").addEventListener("click", function () {
            const bmiFields = document.getElementById("bmiCalculationFields");
            const bmiClassification = document.getElementById("bmiClassification");

            // Toggle visibility
            if (bmiFields.style.display === "none") {
                bmiFields.style.display = "block"; // Show the fields
                this.textContent = "Enter BMI Classification Manually"; // Update button text
                bmiClassification.disabled = true;
            } else {
                bmiFields.style.display = "none"; // Hide the fields
                this.textContent = "Calculate BMI"; // Update button text
                bmiClassification.disabled = false;
            }
        });

        // Calculate BMI Function
        function calculateBmi() {
            const heightInput = document.getElementById("heightInput").value;
            const weightInput = document.getElementById("weightInput").value;
            const bmiResult = document.getElementById("bmiResult");

            if (heightInput && weightInput) {
                const heightInMeters = heightInput / 100;
                const bmi = (weightInput / (heightInMeters * heightInMeters)).toFixed(2);

                if (!isNaN(bmi) && bmi > 0) {
                    bmiResult.value = bmi;

                    // Automatically update BMI classification
                    const bmiClassification = document.getElementById("bmiClassification");
                    if (bmi < 25) {
                        bmiClassification.value = "0"; // Lower than 25 kg/m² - 0 pts
                    } else if (bmi >= 25 && bmi <= 30) {
                        bmiClassification.value = "1"; // 25-30 kg/m² - 1 pt
                    } else {
                        bmiClassification.value = "3"; // Higher than 30 kg/m² - 3 pts
                    }

                    // Dispatch a change event
                    const event = new Event("change");
                    bmiClassification.dispatchEvent(event);

                    bmiClassification.disabled = true;
                }
                else {
                    bmiResult.value = 0;
                    bmiClassification.disabled = false;
                }
            }
            else {
                bmiResult.value = 0;
                bmiClassification.disabled = false;
            }
        }

        // Add event listeners for real-time BMI calculation
        document.getElementById("heightInput").addEventListener("input", calculateBmi);
        document.getElementById("weightInput").addEventListener("input", calculateBmi);
    </script>
}