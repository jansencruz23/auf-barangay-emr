// <auto-generated />
using System;
using AUF.EMR.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AUF.EMR.Persistence.Migrations
{
    [DbContext(typeof(EMRDbContext))]
    partial class EMRDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AUF.EMR.Domain.Models.Barangay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BarangayHealthStation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BarangayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("longblob");

                    b.Property<string>("Municipality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RuralHealthUnit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Barangays");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.FamilyPlanning.ClientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CurrentUserType")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsCurrentUser")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodBBT")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodBOM")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodBTL")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodCOC")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodCondom")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodIUD")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodImplant")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodInjectable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodLAM")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodNSV")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodPOP")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsMethodSDM")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsReasonMedical")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsReasonSideEffects")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<int?>("ReasonForFP")
                        .HasColumnType("int");

                    b.Property<string>("ReasonMethodText")
                        .HasColumnType("longtext");

                    b.Property<string>("ReasonOthers")
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("ClientTypes");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.FamilyPlanning.MedicalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Disability")
                        .HasColumnType("longtext");

                    b.Property<bool>("HasAbnormalDischarge")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasBreastCancer")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasChestPain")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasCough")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasDisability")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasHeartAttack")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasHematoma")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasJaundice")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasSevereHeadache")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasTakenRifampicin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasVaginalBleeding")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSmoker")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("MedicalHistories");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.FamilyPlanning.ObstetricalHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("HadEctopicPregnancy")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasDysmenorrhea")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasHydatidiformMole")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsLastDeliveryVaginal")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastDelivery")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LastMenstrualPeriod")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MenstrualFlow")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<int?>("NumAbortion")
                        .HasColumnType("int");

                    b.Property<int?>("NumFullTerm")
                        .HasColumnType("int");

                    b.Property<int>("NumGravidityPregnancies")
                        .HasColumnType("int");

                    b.Property<int?>("NumLivingChildren")
                        .HasColumnType("int");

                    b.Property<int>("NumParityPregnancies")
                        .HasColumnType("int");

                    b.Property<int?>("NumPremature")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PreviousMenstrualPeriod")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("ObstetricalHistories");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.FamilyPlanning.PhysicalExamination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Abdomen")
                        .HasColumnType("int");

                    b.Property<bool?>("AdnexalMass")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BloodPressure")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Breast")
                        .HasColumnType("int");

                    b.Property<int?>("CervicalConsistency")
                        .HasColumnType("int");

                    b.Property<bool?>("CervicalTenderness")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Conjunctiva")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Extremities")
                        .HasColumnType("int");

                    b.Property<double>("Height")
                        .HasColumnType("double");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("Neck")
                        .HasColumnType("int");

                    b.Property<bool?>("PCABloodyDischarge")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PCAInflammation")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PCAPolyp")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PCAWarts")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PelvicAbnormalDischarge")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PelvicCervicalAbnormalities")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PelvicCervicalConsistency")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PelvicMass")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("PelvicNormal")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PulseRate")
                        .HasColumnType("int");

                    b.Property<int>("Skin")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UterineDepth")
                        .HasColumnType("int");

                    b.Property<bool?>("UterinePosition")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UterinePositions")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("PhysicalExaminations");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.FamilyPlanning.RisksForSTI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AbnormalDischarge")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Genitals")
                        .HasColumnType("int");

                    b.Property<bool>("HadTreatmentForSTI")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasHIV")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasPainInGenitalArea")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasSoresInGenitalArea")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("RisksForSTIs");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.FamilyPlanning.RisksForVAW", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("HadUnpleasantRelationship")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HadVAW")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<bool>("PartnerNotApproveFP")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ReferredTo")
                        .HasColumnType("int");

                    b.Property<string>("ReferredToOthers")
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("RisksForVAWs");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.FamilyPlanningRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("AverageMonthlyIncome")
                        .HasColumnType("double");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ClientAge")
                        .HasColumnType("int");

                    b.Property<int>("ClientHouseholdMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClientOccupation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ClientSignatureAcknowledgement")
                        .HasColumnType("longtext");

                    b.Property<string>("ClientSignatureConsent")
                        .HasColumnType("longtext");

                    b.Property<int>("ClientTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateAcknowledgement")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateConsent")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FPMethod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsNHTS")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPlanningChildren")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("LivingChildrenNo")
                        .HasColumnType("int");

                    b.Property<int>("MedicalHistoryId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("ObstetricalHistoryId")
                        .HasColumnType("int");

                    b.Property<string>("PhilhealthNo")
                        .HasColumnType("longtext");

                    b.Property<int>("PhysicalExaminationId")
                        .HasColumnType("int");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RisksForSTIId")
                        .HasColumnType("int");

                    b.Property<int>("RisksForVAWId")
                        .HasColumnType("int");

                    b.Property<int>("SpouseAge")
                        .HasColumnType("int");

                    b.Property<DateTime>("SpouseBirthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SpouseFirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SpouseLastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SpouseMiddleInitial")
                        .HasColumnType("longtext");

                    b.Property<string>("SpouseOccupation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ClientHouseholdMemberId");

                    b.HasIndex("ClientTypeId");

                    b.HasIndex("MedicalHistoryId");

                    b.HasIndex("ObstetricalHistoryId");

                    b.HasIndex("PhysicalExaminationId");

                    b.HasIndex("RisksForSTIId");

                    b.HasIndex("RisksForVAWId");

                    b.ToTable("FamilyPlanningRecords");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.Household", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Barangay")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FirstQtrVisit")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FourthQtrVisit")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HouseNoAndStreet")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HouseholdNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsHeadPhilhealthMember")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsIP")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsNHTS")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("MotherMaidenName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhilhealthNo")
                        .HasColumnType("longtext");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("SecondQtrVisit")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ThirdQtrVisit")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Households");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.HouseholdMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstQtrClassification")
                        .HasColumnType("longtext");

                    b.Property<string>("FourthQtrClassification")
                        .HasColumnType("longtext");

                    b.Property<int>("HouseholdId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsInSchool")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsNhts")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("MotherMaidenName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NameOfFather")
                        .HasColumnType("longtext");

                    b.Property<string>("NameOfMother")
                        .HasColumnType("longtext");

                    b.Property<string>("OtherRelation")
                        .HasColumnType("longtext");

                    b.Property<int>("RelationshipToHouseholdHead")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("SecondQtrClassification")
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ThirdQtrClassification")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HouseholdId");

                    b.ToTable("HouseholdMembers");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("longblob");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.PatientRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Attended")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FatherAge")
                        .HasColumnType("int");

                    b.Property<DateTime>("FatherBirthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("MotherAge")
                        .HasColumnType("int");

                    b.Property<DateTime>("MotherBirthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TypeOfDelivery")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientRecords");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.PregnancyTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EarlyNewbornDeath")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpectedDateOfDelivery")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FirstAntenatalCheckUp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Gravidity")
                        .HasColumnType("int");

                    b.Property<int>("HouseholdMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("LiveBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("MaternalDeath")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("Parity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostnatalCheckUp24hrs")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("PostnatalCheckUp7days")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("PregnancyOutcome")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SecondAntenatalCheckUp")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("StillBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ThirdAntenatalCheckUp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("HouseholdMemberId");

                    b.ToTable("PregnancyTrackings");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.PregnancyTrackingHH", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BHWName")
                        .HasColumnType("longtext");

                    b.Property<string>("Barangay")
                        .HasColumnType("longtext");

                    b.Property<string>("BarangayHealthStation")
                        .HasColumnType("longtext");

                    b.Property<string>("BirthingCenter")
                        .HasColumnType("longtext");

                    b.Property<string>("BirthingCenterAddress")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HouseholdId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MidwifeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("Municipality")
                        .HasColumnType("longtext");

                    b.Property<string>("Province")
                        .HasColumnType("longtext");

                    b.Property<string>("ReferralCenter")
                        .HasColumnType("longtext");

                    b.Property<string>("ReferralCenterAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("Region")
                        .HasColumnType("longtext");

                    b.Property<string>("RuralHealthUnit")
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseholdId");

                    b.ToTable("PregnancyTrackingHHs");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.RecordLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("RecordLogs");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.VaccinationAppointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Height")
                        .HasColumnType("double");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<double?>("Temperature")
                        .HasColumnType("double");

                    b.Property<DateTime?>("VaccinationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Weight")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("VaccinationAppointments");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("VaccinationAppointmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VaccinationAppointmentId");

                    b.ToTable("Vaccines");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.WomanOfReproductiveAge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AcceptModernFpMethod")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CivilStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FPAcceptedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HouseholdMemberId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFPMethod")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsFPModern")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsFecund")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMFPUnmet")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPlanChildrenLimiting")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPlanChildrenNow")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsPlanChildrenSpacing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPlanningChildren")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModernFPMethod")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<bool?>("ShiftToModern")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("HouseholdMemberId");

                    b.ToTable("WomanOfReproductiveAges");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.FamilyPlanningRecord", b =>
                {
                    b.HasOne("AUF.EMR.Domain.Models.HouseholdMember", "ClientHouseholdMember")
                        .WithMany()
                        .HasForeignKey("ClientHouseholdMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AUF.EMR.Domain.Models.FamilyPlanning.ClientType", "ClientType")
                        .WithMany()
                        .HasForeignKey("ClientTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AUF.EMR.Domain.Models.FamilyPlanning.MedicalHistory", "MedicalHistory")
                        .WithMany()
                        .HasForeignKey("MedicalHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AUF.EMR.Domain.Models.FamilyPlanning.ObstetricalHistory", "ObstetricalHistory")
                        .WithMany()
                        .HasForeignKey("ObstetricalHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AUF.EMR.Domain.Models.FamilyPlanning.PhysicalExamination", "PhysicalExamination")
                        .WithMany()
                        .HasForeignKey("PhysicalExaminationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AUF.EMR.Domain.Models.FamilyPlanning.RisksForSTI", "RisksForSTI")
                        .WithMany()
                        .HasForeignKey("RisksForSTIId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AUF.EMR.Domain.Models.FamilyPlanning.RisksForVAW", "RisksForVAW")
                        .WithMany()
                        .HasForeignKey("RisksForVAWId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientHouseholdMember");

                    b.Navigation("ClientType");

                    b.Navigation("MedicalHistory");

                    b.Navigation("ObstetricalHistory");

                    b.Navigation("PhysicalExamination");

                    b.Navigation("RisksForSTI");

                    b.Navigation("RisksForVAW");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.HouseholdMember", b =>
                {
                    b.HasOne("AUF.EMR.Domain.Models.Household", "Household")
                        .WithMany("HouseholdMembers")
                        .HasForeignKey("HouseholdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Household");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.PatientRecord", b =>
                {
                    b.HasOne("AUF.EMR.Domain.Models.HouseholdMember", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.PregnancyTracking", b =>
                {
                    b.HasOne("AUF.EMR.Domain.Models.HouseholdMember", "HouseholdMember")
                        .WithMany()
                        .HasForeignKey("HouseholdMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseholdMember");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.PregnancyTrackingHH", b =>
                {
                    b.HasOne("AUF.EMR.Domain.Models.Household", "Household")
                        .WithMany()
                        .HasForeignKey("HouseholdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Household");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.VaccinationAppointment", b =>
                {
                    b.HasOne("AUF.EMR.Domain.Models.PatientRecord", "Patient")
                        .WithMany("VaccinationAppointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.Vaccine", b =>
                {
                    b.HasOne("AUF.EMR.Domain.Models.VaccinationAppointment", null)
                        .WithMany("Vaccines")
                        .HasForeignKey("VaccinationAppointmentId");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.WomanOfReproductiveAge", b =>
                {
                    b.HasOne("AUF.EMR.Domain.Models.HouseholdMember", "HouseholdMember")
                        .WithMany()
                        .HasForeignKey("HouseholdMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseholdMember");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AUF.EMR.Domain.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AUF.EMR.Domain.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AUF.EMR.Domain.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AUF.EMR.Domain.Models.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.Household", b =>
                {
                    b.Navigation("HouseholdMembers");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.PatientRecord", b =>
                {
                    b.Navigation("VaccinationAppointments");
                });

            modelBuilder.Entity("AUF.EMR.Domain.Models.VaccinationAppointment", b =>
                {
                    b.Navigation("Vaccines");
                });
#pragma warning restore 612, 618
        }
    }
}
